# EditorConfig is awesome: http://EditorConfig.org
# VS implementat: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference

# top-most EditorConfig file
root = true

# Don't use tabs for indentation.
[*]
    end_of_line = crlf
    indent_style = space
    # (Please don't specify an indent_size here; that has too many unintended consequences.)

# Code files
[*.{cs,csx,vb,vbx}]
    indent_size = 4

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
    indent_size = 2

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
    indent_size = 4

# JSON files
[*.json]
    indent_size = 2

# General .NET styling
[*.{cs,vb}]

    # This qualifiers (IDE0003 | IDE0009)
    dotnet_style_qualification_for_field = false:warning
    dotnet_style_qualification_for_property = false:warning
    dotnet_style_qualification_for_method = false:warning
    dotnet_style_qualification_for_event = false:warning

    # Language keyword settings for declarations (IDE0012 | IDE0014)
    dotnet_style_predefined_type_for_locals_parameters_members = true:warning

    # Language keyword settings for members (IDE0013 | IDE0015)
    dotnet_style_predefined_type_for_member_access = false:warning

    # Object initializers (IDE0017)
    dotnet_style_object_initializer = true:suggestion

    # Collection initializers (IDE0028)
    dotnet_style_collection_initializer = true:suggestion

    # Null coalesce operator (IDE0029)
    dotnet_style_coalesce_expression = true:suggestion

    # Null conditional operator (IDE0031)
    dotnet_style_null_propagation = true:suggestion

    # Explicit tuple names (IDE0033)
    dotnet_style_explicit_tuple_names = true:suggestion

# C# styling
[*.cs]

    # var vs explicit types (IDE0007 | IDE0008)
    csharp_style_var_for_built_in_types = true:suggestion
    csharp_style_var_when_type_is_apparent = true:suggestion
    csharp_style_var_elsewhere = true:suggestion

    # Braces (IDE0011)
    csharp_prefer_braces = false:none

    # Throw expressions (IDE0016)
    csharp_style_throw_expression = true:suggestion

    # Inline variables (IDE0018)
    csharp_style_inlined_variable_declaration = true:suggestion

    # Pattern matching vs "as" (IDE0019)
    csharp_style_pattern_matching_over_as_with_null_check = true:suggestion    

    # Pattern matching vs "is" (IDE0020)
    csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion    

    # Expression bodied constructors (IDE0021)
    csharp_style_expression_bodied_constructors = false:suggestion

    # Expression bodied methods (IDE0022)
    csharp_style_expression_bodied_methods = true:suggestion
       
    # Expression bodied operators (IDE0023 | IDE0024)
    csharp_style_expression_bodied_operators = false:suggestion

    # Expression bodied properties (IDE0025)
    csharp_style_expression_bodied_properties = true:suggestion

    # Expression bodied indexers (IDE0026)
    csharp_style_expression_bodied_indexers = true:suggestion

    # Expression bodied accessors (IDE0027)
    csharp_style_expression_bodied_accessors = true:suggestion
        
    # Simplify default expressions (IDE0034)
    csharp_prefer_simple_default_expression = true:suggestion

    # Conditional delegate calls (IDE0041)
    csharp_style_conditional_delegate_call = true:suggestion        

    #####
    # Formatting - does not use the suggestion, warning, etc format...
    dotnet_sort_system_directives_first = true

    # New lines
    csharp_new_line_before_open_brace = control_blocks, events, local_functions, methods, object_collection, properties, types
    csharp_new_line_before_else = false
    csharp_new_line_before_catch = false
    csharp_new_line_before_finally = false
    csharp_new_line_before_members_in_object_initializers = false
    csharp_new_line_before_members_in_anonymous_types = false
    csharp_new_line_between_query_expression_clauses = false

    # Indenting
    csharp_indent_case_contents = false
    csharp_indent_switch_labels = true
    csharp_indent_labels = flush_left

    # Spacing
    csharp_space_after_cast = false
    csharp_space_after_keywords_in_control_flow_statements = true
    csharp_space_between_method_declaration_parameter_list_parentheses = true
    csharp_space_between_method_call_parameter_list_parentheses = false
    csharp_space_between_parentheses = false

    # Wrapping
    csharp_preserve_single_line_statements = false
    csharp_preserve_single_line_blocks = true

    ###
    # Naming (most specific to least ordering required)
    # dotnet_naming_rule.{title}.symbols = dotnet_naming_symbols
    # dotnet_naming_rule.{title}.style = dotnet_naming_style
    # dotnet_naming_rule.{title}.rule.severity = none | suggestion | warning | error
    ##
    # dotnet_naming_symbols.{title}.applicable_kinds = * | class, struct, interface, enum, property, method, field, event, namespace, delegate, type_parameter
    # dotnet_naming_symbols.{title}.applicable_accessibilities = * | public, internal, private, protected, protected_internal
    # dotnet_naming_symbols.{title}.required_modifiers = abstract, async, const, readonly, static, must_inherit?
    ##
    # dotnet_naming_style.{title}.capitalization = pascal_case | camel_case | first_word_upper | all_upper | all_lower
    # dotnet_naming_style.{title}.required_prefix = ...
    # dotnet_naming_style.{title}.required_suffix = ...
    # dotnet_naming_style.{title}.word_separator = ... 
    ###

    # Private or internal static fields start with s_
    dotnet_naming_rule.private_static_fields_start_with_s_underscore.symbols = private_static_field
    dotnet_naming_rule.private_static_fields_start_with_s_underscore.style = start_with_s_underscore
    dotnet_naming_rule.private_static_fields_start_with_s_underscore.severity = warning

    # Private or internal fields start with _
    dotnet_naming_rule.private_fields_start_with_s_underscore.symbols = private_field
    dotnet_naming_rule.private_fields_start_with_s_underscore.style = start_with_underscore
    dotnet_naming_rule.private_fields_start_with_s_underscore.severity = warning

    # Async methods end with Async
    dotnet_naming_rule.async_methods_end_with_async.symbols = async_methods
    dotnet_naming_rule.async_methods_end_with_async.style = end_with_async
    dotnet_naming_rule.async_methods_end_with_async.severity = warning

    # Interfaces begin with I
    dotnet_naming_rule.interfaces_start_with_i.symbols = interface
    dotnet_naming_rule.interfaces_start_with_i.style = start_with_i
    dotnet_naming_rule.interfaces_start_with_i.severity = error

    ##
    # Symbols
    ##
    dotnet_naming_symbols.async_methods.applicable_kinds = method
    dotnet_naming_symbols.async_methods.applicable_accessibilities = *
    dotnet_naming_symbols.async_methods.required_modifiers = async

    dotnet_naming_symbols.interface.applicable_kinds = interface

    dotnet_naming_symbols.private_static_field.applicable_kinds = field
    dotnet_naming_symbols.private_static_field.applicable_accessibilities = private
    dotnet_naming_symbols.private_static_field.required_modifiers = static

    dotnet_naming_symbols.private_field.applicable_kinds = field
    dotnet_naming_symbols.private_field.applicable_accessibilities = private

    ##
    # Styles
    ##
    dotnet_naming_style.end_with_async.capitalization = pascal_case
    dotnet_naming_style.end_with_async.required_suffix = Async

    dotnet_naming_style.start_with_i.capitalization = pascal_case
    dotnet_naming_style.start_with_i.required_prefix = I

    dotnet_naming_style.start_with_s_underscore.capitalization = camel_case
    dotnet_naming_style.start_with_s_underscore.required_prefix = s_

    dotnet_naming_style.start_with_underscore.capitalization = camel_case
    dotnet_naming_style.start_with_underscore.required_prefix = _

